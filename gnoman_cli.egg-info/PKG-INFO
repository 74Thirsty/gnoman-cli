Metadata-Version: 2.4
Name: gnoman-cli
Version: 1.1.0
Summary: GNOMAN mission-control console
Author-email: Christopher Hirschauer <c.hirschauer@gmail.com>
License: Copyright (c) 2025 Christopher Hirschauer
        All rights reserved.
        GNOMAN License
        Version 1.0 ‚Äî August 2025
        
        # GNOMAN LICENSE AGREEMENT
        
        This License Agreement (‚ÄúAgreement‚Äù) is entered into by and between the Licensor and the undersigned Licensee. By executing this Agreement, Licensee acknowledges and accepts the following binding terms and conditions:
        
        ---
        
        ### 1. Form of Execution
        
        This Agreement is valid **only** when signed in handwritten ink by both Licensor and Licensee **on physical paper in the presence of a notary public**.
        
        Electronic signatures, scanned copies, PDF acknowledgments, facsimiles, or any other digital substitutes are expressly rejected as invalid. No license is created by purchase receipt, digital acknowledgment, or possession of GNOMAN software unless and until a signed physical copy of this Agreement has been executed.
        
        ---
        
        ### 2. Definitions
        
        * **‚ÄúGNOMAN System‚Äù** means the proprietary toolkit, methods, persistence hierarchies, custodial safeguards, and cryptographic processes developed by Licensor.
        * **‚ÄúOutputs‚Äù** means any scripts, signed transactions, audit logs, or results generated by the GNOMAN System.
        
        ---
        
        ### 3. Grant of License
        
        Licensor grants Licensee a limited, non-exclusive, non-transferable license to use GNOMAN **only if Licensee holds an original paper copy of this Agreement bearing Licensor‚Äôs handwritten signature.**
        
        No person, entity, or organization may use, copy, execute, or distribute GNOMAN without possession of such signed Agreement.
        
        ---
        
        ### 4. Proprietary Rights and Restrictions
        
        * Title and ownership of GNOMAN remain vested exclusively in Licensor at all times.
        * Licensee may not:
          (i) copy, distribute, modify, or reverse engineer GNOMAN;
          (ii) sublicense, rent, lease, or resell GNOMAN;
          (iii) remove or alter any branding, signatures, or forensic markers embedded by Licensor.
        * Any derivative works or improvements created by Licensee automatically belong to Licensor.
        
        ---
        
        ### 5. Conditions of Use
        
        Licenses are granted **individually**. Each Licensee must hold their own signed paper agreement. Possession of GNOMAN without such an agreement constitutes willful infringement and theft.
        
        ---
        
        ### 6. Revocability
        
        Licensor may revoke this license upon breach of any term. Upon revocation, Licensee must immediately cease all use and destroy all copies of GNOMAN.
        
        ---
        
        ### 7. Audit and Verification
        
        Licensor retains the right to demand production of the original signed license at any time. Failure to produce it upon request is prima facie evidence of infringement.
        
        ---
        
        ### 8. Governing Law and Venue
        
        This Agreement shall be governed by and construed under the laws of the State of **Iowa**, with venue exclusively in Woodbury County, Iowa, or the Northern District of Iowa.
        
        ---
        
        ### 9. Entire Agreement
        
        This Agreement represents the full and exclusive license terms. No oral promises, digital acknowledgments, or electronic agreements have any effect.
        
        ---
        
        ### 10. Forfeiture
        
        Any unauthorized use of GNOMAN voids all rights and forfeits any benefits, results, or profits obtained from such use.
        
        ---
        
        This Agreement embodies GNOMAN‚Äôs spirit: **ancient, deliberate, notarized, and absolute. Only a signed sheet of paper with real ink creates rights. Without it, you have nothing.**
        
Project-URL: Homepage, https://github.com/74Thirsty/gnoman-cli
Project-URL: Source, https://github.com/74Thirsty/gnoman-cli
Project-URL: Issues, https://github.com/74Thirsty/gnoman-cli/issues
Classifier: Programming Language :: Python :: 3
Classifier: Environment :: Console
Classifier: Topic :: Security
Requires-Python: >=3.11
Description-Content-Type: text/markdown
License-File: LICENSE.md
License-File: LICENSEE.md
Requires-Dist: textual<0.63.0,>=0.62.0
Requires-Dist: keyring>=24.0.0
Requires-Dist: secretstorage>=3.3.3; platform_system == "Linux"
Requires-Dist: cryptography>=42.0.0
Requires-Dist: web3>=6.0.0
Requires-Dist: bip_utils>=2.7.0
Requires-Dist: safe-eth-py>=5.0.0
Requires-Dist: eth_abi>=4.2.1
Requires-Dist: pdfkit>=1.0.0
Requires-Dist: rich>=13.0.0
Dynamic: license-file

# GNOMAN ‚Äî Universal Keyring Manager

GNOMAN is a cross-platform command line tool that inspects and maintains the
secrets stored in your operating system keyring. It provides a consistent
interface across Linux (Secret Service), macOS (Keychain) and Windows
(Credential Locker) so that you can audit, export, rotate and restore
credentials without leaving the terminal.

## Features

- üîç **Enumerate every keyring entry** regardless of namespace or application.
- üßæ **Inspect and audit** secrets for stale credentials, missing metadata and
  duplicates.
- ‚úçÔ∏è **Create, update or delete** entries using the native system backend.
- üì¶ **Encrypted export/import** routines for disaster recovery and migration.
- ‚ôªÔ∏è **Credential rotation** that generates high-entropy replacements in bulk.

## Installation

Install GNOMAN from PyPI:

```bash
pip install gnoman-cli
```

## Usage

```
usage: gnoman [-h] [--version] {list,show,set,delete,export,import,rotate,audit} ...
```

### List keyring entries

```bash
gnoman list --namespace github
```

### Show a secret

```bash
gnoman show github.com personal-token
```

### Set or update a secret

```bash
gnoman set github.com personal-token
```

You will be prompted for the secret value when it is not provided directly.

### Export and import

```bash
gnoman export backup.gnoman
# ... later ...
gnoman import backup.gnoman
```

Both operations prompt for a passphrase unless `--passphrase` is supplied.

### Rotate credentials

```bash
gnoman rotate --services github.com,slack
```

Regenerates high-entropy secrets for the selected services.

### Audit

```bash
gnoman audit --stale-days 90
```

Produces a JSON report summarising duplicates, stale entries and other
potential issues.

## Development

Tests exercise the platform-agnostic logic using the in-memory adapter:

```bash
pip install -e .[dev]
pytest
```

The CLI interacts with the system keyring by default. Within unit tests the
`gnoman.utils.keyring_backend.use_adapter` helper swaps in an in-memory backend
to avoid touching real credentials.
